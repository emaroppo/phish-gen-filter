import streamlit as st
from pymongo import MongoClient
from bson.objectid import ObjectId

# Database setup
client = MongoClient("mongodb://localhost:27017/")
DB_NAME = "phishing_campaign"
UNCHECKED_COLLECTION = "unchecked_templates"
VALIDATED_COLLECTION = "validated_templates"
REJECTED_COLLECTION = "rejected_templates"


# Streamlit App
def template_filter():
    st.title("Template Filter")
    st.write(
        "This tool is used to filter templates generated by the Template Generator."
    )

    # Retrieve templates from the database
    templates = list(client[DB_NAME][UNCHECKED_COLLECTION].find())

    # Initialize session state to keep track of the current template index
    if "current_index" not in st.session_state:
        st.session_state.current_index = 0

    if st.session_state.current_index < len(templates):
        # Get the current template
        template = templates[st.session_state.current_index]
        # dereference the title field
        template_title = client[DB_NAME].dereference(template["title"])

        # Display template
        st.write(f"**Title:** {template_title['title']}")
        st.write(f"**Body:** {template['body']}")

        # Buttons for Save and Delete
        col1, col2 = st.columns(2)
        with col1:
            if st.button("Save"):
                # Save template to validated collection
                client[DB_NAME][VALIDATED_COLLECTION].insert_one(template)
                client[DB_NAME][UNCHECKED_COLLECTION].delete_one(
                    {"_id": template["_id"]}
                )
                st.session_state.current_index += 1  # Move to the next template
                st.success("Template saved successfully.")

        with col2:
            if st.button("Delete"):
                # Move template to rejected collection
                client[DB_NAME][REJECTED_COLLECTION].insert_one(template)
                client[DB_NAME][UNCHECKED_COLLECTION].delete_one(
                    {"_id": template["_id"]}
                )
                st.session_state.current_index += 1  # Move to the next template
                st.warning("Template deleted.")

    else:
        st.write("No more templates to display.")
