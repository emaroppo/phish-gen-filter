import streamlit as st
import json

with open("data/titles.json", "r") as f:
    titles_json = json.load(f)

DB_NAME = "phishing_campaign"
UNCHECKED_COLLECTION = "unchecked_titles"
VALIDATED_COLLECTION = "validated_titles"
REJECTED_COLLECTION = "rejected_titles"


@st.cache_data(ttl=600)
def get_titles(_client, target, context):
    return list(
        _client[DB_NAME][UNCHECKED_COLLECTION].find(
            {"targets": target, "context": context}
        )
    )


def title_filter(client):
    st.title("Title Filter")
    st.write("This tool is used to filter titles generated by the Title Generator.")
    # select a target category from the dropdown
    categories = list(titles_json.keys())
    category = st.selectbox("Select a target category", categories)

    # select a prompt
    prompts = list(titles_json[category])
    prompt = st.selectbox("Select a prompt", prompts)
    # retrieve all matching titles
    titles = get_titles(client, category, prompt)

    # display titles with checkboxes
    selected_titles = []
    for title in titles:
        if st.checkbox(title["title"]):
            selected_titles.append(title)

    st.write(f"Selected {len(selected_titles)} titles.")

    # save selected titles to validated collection, otherwise delete from unchecked collection and add to rejected collection
    if st.button("Save Selected Titles"):
        for title in selected_titles:
            client[DB_NAME][VALIDATED_COLLECTION].insert_one(title)
            client[DB_NAME][UNCHECKED_COLLECTION].delete_one({"_id": title["_id"]})
        st.write("Selected titles saved successfully.")

    if st.button("Delete Selected Titles"):
        for title in selected_titles:
            client[DB_NAME][REJECTED_COLLECTION].insert_one(title)
            client[DB_NAME][UNCHECKED_COLLECTION].delete_one({"_id": title["_id"]})
        st.write("Selected titles deleted successfully.")
